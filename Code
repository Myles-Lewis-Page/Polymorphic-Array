import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/*
Myles Page
Cs 1450 002
Monday - Wednesday
Due 02-03-2021
Assignment 2
Polymorphic Array
*/

public class PageMylesAssignment2 {
	
	public static void main(String[] args) throws FileNotFoundException {
		//opens the file to read
		File adventures = new File("Adventures.txt");
		Scanner read = new Scanner(adventures);
		
		//reads the first value to add the size to the array 
		int size = read.nextInt();
		
		//makes the polymorphic array using the size from the file
		adventure[] adv = new adventure[size];
		
		//variable for place in the array 
		int place = 0;
		
		//reads the file until there is no more 
		while(read.hasNext()) {
			//read the file to variables
			String type = read.next();
			double time = read.nextDouble();
			double price = read.nextDouble();
			String description = null;
			//check which description to use 
			if(type.equals("Zipline")) {
				description = zipline.description;
			}
			else if(type.equals("Snorkel")) {
				description = snorkel.description; 
			}
			else if(type.equals("Helicopter")) {
				description = helicopter.description;
			}
			else {
				description = "Adventure not supported";
			}
			adv[place] = new adventure(type, time, price, description); 
			place++;
		}
		
		//print the polymorphic array 
		place = 0;
		System.out.println("Type    \tTime \tPrice   \tDescription");
		while(place < size) {
			System.out.println(adv[place].getType() + "    \t" + adv[place].getTime() + "\t$" + adv[place].getPrice() + "  \t" + adv[place].getDescription());
			place++;
		}
		//call the adventure company 
		adventureCompany.advCompany(adv);
	}
} 

//adventure class
class adventure{
	//variables to use in the poly array 
	private String typeOfAdveture;
	private double timeOfAdveture;
	private double priceOfAdveture;
	private String descriptionOfAdventure;
		
	//constructor for the adventure class
	public adventure(String type, double time, double price, String description) {
		typeOfAdveture = type;
		timeOfAdveture = time;
		priceOfAdveture = price;
		descriptionOfAdventure = description;
	}
	
	//return functions 
	public String getType() {
		return typeOfAdveture;
	}
	 
	public double getTime() {
		return timeOfAdveture;
	}
		 
	public double getPrice() {
		return priceOfAdveture;
	}
		 
	public String getDescription() {
		return descriptionOfAdventure;
	}
}

//subclasses for the adventure
class zipline extends adventure{
	public zipline(String type, double time, double price, String description) {
		super(type, time, price, description);
	}
	public static String description = "Put on a harness, connect to a cable, enjoy an aerial view";
}

class snorkel extends adventure{
	public snorkel(String type, double time, double price, String description) {
		super(type, time, price, description);
	}
	public static String description = "Use a diving mask & breathing tube, enjoy underwater world";
}

class helicopter extends adventure{
	public helicopter(String type, double time, double price, String description) {
		super(type, time, price, description);
	}
	public static String description = "Watch the world unfold from a bird's eye view";
}

//adventure company class 
class adventureCompany{
	//make the company 
	public static void advCompany(adventure[] adv) {
		//placement in the arrays 
		int place = 0;
		int x = 0;
		String advCompany[][] = new String[3][4];
		int size = adv.length;
		//repeat till at the end 
		while(place < size) {
			//check if its the neice type
			if(adv[place].getType().equals("Snorkel")) {
				advCompany[x][0] = adv[place].getType();
				advCompany[x][1] = String.valueOf(adv[place].getTime());
				advCompany[x][2] = String.valueOf(adv[place].getPrice());
				advCompany[x][3] = adv[place].getDescription();
				x++;
				place++;
			}
			else {
				place++;
			}
		}
		//print the company 
		printAdvCompany(advCompany);
	}
	
	//print the company function
	public static void printAdvCompany(String[][] advCompany) {
		//place and size of the array
		int size = advCompany.length;
		int place = 0;
		//print the array 
		System.out.println("\n\n  CS 1450 Adventure Company");
		System.out.println("Type    \tTime \tPrice");
		while(place < size) {
			System.out.println(advCompany[place][0] + "   \t" + advCompany[place][1] + "\t$" + advCompany[place][2]);
			place++;
		}
	}
}
